@using PayrollEngine.WebApp.ViewModel

<MudDialog Style="min-width: 500px;">
    <DialogContent>

        <MudText Typo="Typo.h5" Class="mb-4">Payrun Job @PayrunJob.Name</MudText>

        @* legal job *@
        <MudStack Row="true" Class="gap-4 mb-4">
            @if (PayrunJob.JobStatus != PayrunJobStatus.Forecast)
            {
                @* legal job: new *@
                <MudPaper Class="pa-4"
                      Style="min-width: 25em; max-width: 40em">
                    <MudStack Spacing="0">
                        <MudText Typo="Typo.h6">New</MudText>
                        <MudInputLabel Class="pt-4">Date</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.Created</MudText>
                        <MudInputLabel Class="pt-4">User</MudInputLabel>
                        <MudText Class="pr-4">@GetUserName(PayrunJob.CreatedUserId)</MudText>
                        <MudInputLabel Class="pt-4">Period</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.PeriodStart</MudText>
                        <MudInputLabel Class="pt-4">Retro pay mode</MudInputLabel>
                        <MudText Class="pr-4">
                            @(PayrunJob.RetroPayMode == RetroPayMode.ValueChange ? "On" : "Off")
                        </MudText>
                        <MudInputLabel Class="pt-4">Reason</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.CreatedReason</MudText>
                        <PayrunEmployeeInfo Class="pt-4" Employees="@Employees"
                                        SelectedEmployees="@PayrunJob.Employees?.Select(x => x.EmployeeId).ToList()" />
                        @if (PayrunJob.Attributes != null && PayrunJob.Attributes.Any())
                        {
                            <PayrunParameterInfo Class="pt-4" Language="Language"
                                         ParameterAttributes="PayrunJob.Attributes" />
                        }
                    </MudStack>
                </MudPaper>
                @* legal job: draft *@
                <MudPaper Class="pa-4" Elevation="@(PayrunJob.JobStatus.IsDraft() ? 4 : 1)"
                      Style="min-width: 15em; max-width: 25em">
                    <MudStack Spacing="0">
                        <MudText Typo="Typo.h6" Color="@(PayrunJob.JobStatus.IsDraft() ? Color.Tertiary : Color.Default)">
                            Draft
                        </MudText>
                        <MudInputLabel Class="pt-4">Date</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.Created</MudText>
                        <MudInputLabel Class="pt-4">User</MudInputLabel>
                        <MudText Class="pr-4">@GetUserName(PayrunJob.CreatedUserId)</MudText>
                    </MudStack>
                </MudPaper>
                @* legal job: release *@
                @if (PayrunJob.Released.HasValue)
                {
                    <MudPaper Class="pa-4" Elevation="@(PayrunJob.JobStatus.IsRelease() ? 4 : 1)"
                      Style="min-width: 15em; max-width: 25em">
                        <MudStack Spacing="0">
                            <MudText Typo="Typo.h6"
                             Color="@(PayrunJob.JobStatus == PayrunJobStatus.Release ? Color.Tertiary : Color.Default)">
                                Release
                            </MudText>
                            <MudInputLabel Class="pt-4">Date</MudInputLabel>
                            <MudText Class="pr-4">@PayrunJob.Released</MudText>
                            <MudInputLabel Class="pt-4">User</MudInputLabel>
                            <MudText Class="pr-4">@GetUserName(PayrunJob.ReleasedUserId)</MudText>
                        </MudStack>
                    </MudPaper>
                }
                @* legal job: process *@
                @if (PayrunJob.Processed.HasValue)
                {
                    <MudPaper Class="pa-4" Elevation="@(PayrunJob.JobStatus.IsProcess() ? 4 : 1)"
                      Style="min-width: 15em; max-width: 25em">
                        <MudStack Spacing="0">
                            <MudText Typo="Typo.h6"
                             Color="@(PayrunJob.JobStatus == PayrunJobStatus.Process ? Color.Tertiary : Color.Default)">
                                Process
                            </MudText>
                            <MudInputLabel Class="pt-4">Date</MudInputLabel>
                            <MudText Class="pr-4">@PayrunJob.Processed</MudText>
                            <MudInputLabel Class="pt-4">User</MudInputLabel>
                            <MudText Class="pr-4">@GetUserName(PayrunJob.ProcessedUserId)</MudText>
                        </MudStack>
                    </MudPaper>
                }
                @* legal job: complete *@
                @if (PayrunJob.Finished.HasValue &&
               PayrunJob.JobStatus is PayrunJobStatus.Complete)
                {
                    <MudPaper Class="pa-4" Elevation="@(PayrunJob.JobStatus.IsComplete() ? 4 : 1)"
                      Style="min-width: 15em; max-width: 25em">
                        <MudStack Spacing="0">
                            <MudText Typo="Typo.h6"
                             Color="@(PayrunJob.JobStatus == PayrunJobStatus.Complete ? Color.Tertiary : Color.Default)">
                                Complete
                            </MudText>
                            <MudInputLabel Class="pt-4">Date</MudInputLabel>
                            <MudText Class="pr-4">@PayrunJob.Finished</MudText>
                            <MudInputLabel Class="pt-4">User</MudInputLabel>
                            <MudText Class="pr-4">@GetUserName(PayrunJob.FinishedUserId)</MudText>
                        </MudStack>
                    </MudPaper>
                }
                @* legal job: cancel or abort *@
                @if (PayrunJob.Finished.HasValue &&
               PayrunJob.JobStatus is PayrunJobStatus.Cancel or PayrunJobStatus.Abort)
                {
                    <MudPaper Class="pa-4" Elevation="4"
                      Style="min-width: 15em; max-width: 25em">
                        <MudStack Spacing="0">
                            <MudText Typo="Typo.h6" Color="Color.Error">@PayrunJob.JobStatus</MudText>
                            <MudInputLabel Class="pt-4">Date</MudInputLabel>
                            <MudText Class="pr-4">@PayrunJob.Finished</MudText>
                            <MudInputLabel Class="pt-4">User</MudInputLabel>
                            <MudText Class="pr-4">@GetUserName(PayrunJob.FinishedUserId)</MudText>
                        </MudStack>
                    </MudPaper>
                }
            }
            else
            {
                @* forecast job *@
                <MudPaper Class="pa-4" Elevation="4"
                      Style="min-width: 35em; max-width: 50em">
                    <MudStack Spacing="0">
                        <MudText Typo="Typo.h6">New</MudText>
                        <MudInputLabel Class="pt-4">Date</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.Created</MudText>
                        <MudInputLabel Class="pt-4">Name</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.Forecast</MudText>
                        <MudInputLabel Class="pt-4">User</MudInputLabel>
                        <MudText Class="pr-4">@GetUserName(PayrunJob.CreatedUserId)</MudText>
                        <MudInputLabel Class="pt-4">Period</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.PeriodStart</MudText>
                        <MudInputLabel Class="pt-4">Retro pay mode</MudInputLabel>
                        <MudText Class="pr-4">
                            @(PayrunJob.RetroPayMode == RetroPayMode.ValueChange ? "On" : "Off")
                        </MudText>
                        <MudInputLabel Class="pt-4">Reason</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.CreatedReason</MudText>
                        <PayrunEmployeeInfo Class="pt-4" Employees="@Employees"
                                        SelectedEmployees="@PayrunJob.Employees?.Select(x => x.EmployeeId).ToList()" />
                        @if (PayrunJob.Attributes != null && PayrunJob.Attributes.Any())
                        {
                            <PayrunParameterInfo Class="pt-4" ParameterAttributes="@PayrunJob.Attributes" />
                        }
                    </MudStack>
                </MudPaper>
            }
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudStack Row="true" Spacing="0" Class="mx-4 mb-2 gap-2">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="Close">Close</MudButton>
        </MudStack>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public PayrunJob PayrunJob { get; set; } = new();
    [Parameter] public List<PayrollEngine.WebApp.User> Users { get; set; } = new();
    [Parameter] public List<Employee> Employees { get; set; } = new();
    [Parameter] public Language Language { get; set; }

    void Close() => MudDialog.Close(DialogResult.Ok(true));

    protected string GetUserName(int? userId)
    {
        if (!userId.HasValue)
        {
            return null;
        }

        var user = Users.FirstOrDefault(x => x.Id == userId);
        if (user == null)
        {
            return null;
        }
        return $"{user.FirstName} {user.LastName}";
    }

}
