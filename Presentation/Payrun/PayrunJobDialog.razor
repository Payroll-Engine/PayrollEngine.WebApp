@using System.Globalization
@using PayrollEngine.WebApp.Shared
@using PayrollEngine.WebApp.ViewModel

<MudDialog Style="min-width: 30em;" TitleClass="mud-theme-primary pe-dialog-title">
    <DialogContent>

        <MudText Typo="Typo.h5" Class="mb-4">@PayrunJob.Name</MudText>

        @* legal job *@
        <MudStack Row="true" Class="gap-4 mb-4">
            @if (PayrunJob.JobStatus != PayrunJobStatus.Forecast)
            {
                @* legal job: new *@
                <MudPaper Class="pa-4"
                Style="min-width: 25em; max-width: 40em">
                    <MudStack Spacing="0">
                        <MudText Typo="Typo.h6">@Localizer.PayrunJob.New</MudText>

                        <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobDate</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.Created.ToCompactString()</MudText>

                        <MudInputLabel Class="pt-4">@Localizer.User.User</MudInputLabel>
                        <MudText Class="pr-4">@GetUserName(PayrunJob.CreatedUserId)</MudText>

                        <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobPeriod</MudInputLabel>
                        <MudText Class="pr-4">@Period</MudText>

                        @if (PayrunJob.EvaluationDate != null)
                        {
                            <MudInputLabel Class="pt-4">@Localizer.PayrunJob.EvaluationDate</MudInputLabel>
                            <MudText Class="pr-4">@PayrunJob.EvaluationDate?.ToCompactString()</MudText>
                        }

                        <PayrunEmployeeInfo Class="pt-4" Employees="@Employees"
                        SelectedEmployees="@(PayrunJob.Employees?.Select(x => x.EmployeeId).ToList() ?? [])" />

                        <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobReason</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.CreatedReason</MudText>

                        @if (PayrunJob.Attributes != null && PayrunJob.Attributes.Any())
                        {
                            <PayrunParameterInfo Class="pt-4" Culture="@Culture"
                            ParameterAttributes="PayrunJob.Attributes" />
                        }
                    </MudStack>
                </MudPaper>

                @* legal job: draft *@
                <MudPaper Class="pa-4" Elevation="@(PayrunJob.JobStatus.IsDraft() ? 4 : 1)"
                Style="min-width: 15em; max-width: 25em">
                    <MudStack Spacing="0">
                        <MudText Typo="Typo.h6" Color="@(PayrunJob.JobStatus.IsDraft() ? Color.Tertiary : Color.Default)">
                            @Localizer.Enum(PayrunJobStatus.Draft)
                        </MudText>

                        <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobDate</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.Created.ToCompactString()</MudText>

                        <MudInputLabel Class="pt-4">@Localizer.User.User</MudInputLabel>
                        <MudText Class="pr-4">@GetUserName(PayrunJob.CreatedUserId)</MudText>
                    </MudStack>
                </MudPaper>

                @* legal job: release *@
                @if (PayrunJob.Released.HasValue)
                {
                    <MudPaper Class="pa-4" Elevation="@(PayrunJob.JobStatus.IsRelease() ? 4 : 1)"
                    Style="min-width: 15em; max-width: 25em">
                        <MudStack Spacing="0">
                            <MudText Typo="Typo.h6"
                            Color="@(PayrunJob.JobStatus == PayrunJobStatus.Release ? Color.Tertiary : Color.Default)">
                                @Localizer.Enum(PayrunJobStatus.Release)
                            </MudText>

                            <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobDate</MudInputLabel>
                            <MudText Class="pr-4">@PayrunJob.Released?.ToCompactString()</MudText>

                            <MudInputLabel Class="pt-4">@Localizer.User.User</MudInputLabel>
                            <MudText Class="pr-4">@GetUserName(PayrunJob.ReleasedUserId)</MudText>
                        </MudStack>
                    </MudPaper>
                }

                @* legal job: process *@
                @if (PayrunJob.Processed.HasValue)
                {
                    <MudPaper Class="pa-4" Elevation="@(PayrunJob.JobStatus.IsProcess() ? 4 : 1)"
                    Style="min-width: 15em; max-width: 25em">
                        <MudStack Spacing="0">
                            <MudText Typo="Typo.h6"
                            Color="@(PayrunJob.JobStatus == PayrunJobStatus.Process ? Color.Tertiary : Color.Default)">
                                @Localizer.Enum(PayrunJobStatus.Process)
                            </MudText>

                            <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobDate</MudInputLabel>
                            <MudText Class="pr-4">@PayrunJob.Processed?.ToCompactString()</MudText>

                            <MudInputLabel Class="pt-4">@Localizer.User.User</MudInputLabel>
                            <MudText Class="pr-4">@GetUserName(PayrunJob.ProcessedUserId)</MudText>
                        </MudStack>
                    </MudPaper>
                }

                @* legal job: complete *@
                @if (PayrunJob.Finished.HasValue && PayrunJob.JobStatus is PayrunJobStatus.Complete)
                {
                    <MudPaper Class="pa-4" Elevation="@(PayrunJob.JobStatus.IsComplete() ? 4 : 1)"
                    Style="min-width: 15em; max-width: 25em">
                        <MudStack Spacing="0">
                            <MudText Typo="Typo.h6"
                            Color="@(PayrunJob.JobStatus == PayrunJobStatus.Complete ? Color.Tertiary : Color.Default)">
                                @Localizer.Enum(PayrunJobStatus.Complete)
                            </MudText>

                            <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobDate</MudInputLabel>
                            <MudText Class="pr-4">@PayrunJob.Finished?.ToCompactString()</MudText>

                            <MudInputLabel Class="pt-4">@Localizer.User.User</MudInputLabel>
                            <MudText Class="pr-4">@GetUserName(PayrunJob.FinishedUserId)</MudText>
                        </MudStack>
                    </MudPaper>
                }

                @* legal job: cancel or abort *@
                @if (PayrunJob.Finished.HasValue && PayrunJob.JobStatus is PayrunJobStatus.Cancel or PayrunJobStatus.Abort)
                {
                    <MudPaper Class="pa-4" Elevation="4"
                    Style="min-width: 15em; max-width: 25em">
                        <MudStack Spacing="0">
                            <MudText Typo="Typo.h6" Color="Color.Error">@PayrunJob.JobStatus</MudText>

                            <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobDate</MudInputLabel>
                            <MudText Class="pr-4">@PayrunJob.Finished?.ToCompactString()</MudText>

                            <MudInputLabel Class="pt-4">@Localizer.User.User</MudInputLabel>
                            <MudText Class="pr-4">@GetUserName(PayrunJob.FinishedUserId)</MudText>
                        </MudStack>
                    </MudPaper>
                }
            }
            else
            {
                @* forecast job *@
                <MudPaper Class="pa-4" Elevation="4"
                Style="min-width: 35em; max-width: 50em">
                    <MudStack Spacing="0">
                        <MudText Typo="Typo.h6">@Localizer.PayrunJob.New</MudText>
                        <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobDate</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.Created.ToCompactString()</MudText>
                        <MudInputLabel Class="pt-4">Name</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.Forecast</MudText>
                        <MudInputLabel Class="pt-4">@Localizer.User.User</MudInputLabel>
                        <MudText Class="pr-4">@GetUserName(PayrunJob.CreatedUserId)</MudText>
                        <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobPeriod</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.PeriodStart.ToCompactString()</MudText>
                        <MudInputLabel Class="pt-4">@Localizer.PayrunJob.JobReason</MudInputLabel>
                        <MudText Class="pr-4">@PayrunJob.CreatedReason</MudText>
                        <PayrunEmployeeInfo Class="pt-4" Employees="@Employees"
                        SelectedEmployees="@(PayrunJob.Employees?.Select(x => x.EmployeeId).ToList() ?? [])" />
                        @if (PayrunJob.Attributes != null && PayrunJob.Attributes.Any())
                        {
                            <PayrunParameterInfo Class="pt-4" ParameterAttributes="@PayrunJob.Attributes" />
                        }
                    </MudStack>
                </MudPaper>
            }
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudStack Row="true" Spacing="0" Class="mx-4 mb-2 gap-2">
            <MudButton Variant="@Globals.ButtonVariant" Color="Color.Primary" OnClick="Close">@Localizer.Dialog.Close</MudButton>
        </MudStack>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; }
    [Parameter] public Tenant Tenant { get; set; }
    [Parameter] public CultureInfo Culture { get; set; }
    [Parameter] public PayrunJob PayrunJob { get; set; }
    [Parameter] public List<PayrollEngine.WebApp.User> Users { get; set; } = [];
    [Parameter] public List<Employee> Employees { get; set; } = [];

    [Inject] private ILocalizerService LocalizerService { get; set; }

    private Localizer Localizer => LocalizerService.Localizer;
    private DatePeriod Period => new(PayrunJob.PeriodStart, PayrunJob.PeriodEnd);

    private void Close() => MudDialog.Close(DialogResult.Ok(true));

    protected string GetUserName(int? userId)
    {
        if (!userId.HasValue)
        {
            return null;
        }

        var user = Users.FirstOrDefault(x => x.Id == userId);
        if (user == null)
        {
            return null;
        }
        return $"{user.FirstName} {user.LastName}";
    }
}
