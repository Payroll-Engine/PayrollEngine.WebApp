@using PayrollEngine.WebApp.ViewModel;

@* list selection *@
@if (Field.Attributes.HasList())
{
    if (Field.ValueType.IsString())
    {
        <ListSelect T="string" Field="@Field" Language="@Language" Disabled="@Disabled" />
        @* web resource markup *@
        if (Field.ValueType == PayrollEngine.ValueType.WebResource)
        {
            @Field.GetValueMarkup()
        }
    }
    else if (Field.ValueType.IsBoolean())
    {
        <ListSelect T="bool" Field="@Field" Language="@Language" Disabled="@Disabled" />
    }
    else if (Field.ValueType.IsInteger())
    {
        <ListSelect T="int" Field="@Field" Language="@Language" Disabled="@Disabled" />
    }
    else if (Field.ValueType.IsDecimal())
    {
        <ListSelect T="decimal" Field="@Field" Language="@Language" Disabled="@Disabled" />
    }
    else if (Field.ValueType.IsDateTime())
    {
        <ListSelect T="DateTime" Field="@Field" Language="@Language" Disabled="@Disabled" />
    }
    else
    {
        PayrollEngine.Log.Error($"Unsupported case field list type: {Field.ValueType}");
    }
}
else
{
    switch (Field.ValueType)
    {
        case PayrollEngine.ValueType.String:
        case PayrollEngine.ValueType.WebResource:
            <TextBox Field="@Field" Language="@Language" Disabled="@Disabled" />
            @* web resource markup *@
            @if (Field.ValueType == PayrollEngine.ValueType.WebResource)
            {
                @Field.GetValueMarkup()
            }
            break;
        case PayrollEngine.ValueType.Boolean:
            if (Field.Attributes.GetCheck(Language) ?? false)
            {
                <CheckBox Field="@Field" Language="@Language" Disabled="@Disabled" />
            }
            else
            {
                <Switch Field="@Field" Language="@Language" Disabled="@Disabled" />
            }
            break;
        case PayrollEngine.ValueType.Integer:
            <IntegerTextBox Field="@Field" Language="@Language" Disabled="@Disabled" />
            break;
        case PayrollEngine.ValueType.Weekday:
            <WeekdaySelect Field="@Field" Language="@Language" Disabled="@Disabled" />
            break;
        case PayrollEngine.ValueType.Month:
            <MonthSelect Field="@Field" Language="@Language" Disabled="@Disabled" />
            break;
        case PayrollEngine.ValueType.Year:
            <YearSelect Field="@Field" Language="@Language" Disabled="@Disabled" />
            break;
        case PayrollEngine.ValueType.Decimal:
            <DecimalTextBox Field="@Field" Language="@Language" Disabled="@Disabled" />
            break;
        case PayrollEngine.ValueType.Money:
            <DecimalTextBox Field="@Field" Language="@Language" Disabled="@Disabled"
                InputType="DecimalInputType.Money" />
            break;
        case PayrollEngine.ValueType.Percent:
            <DecimalTextBox Field="@Field" Language="@Language" Disabled="@Disabled"
                InputType="DecimalInputType.Percent" />
            break;
        case PayrollEngine.ValueType.DateTime:
            <DateTimePicker Field="@Field" Language="@Language" Disabled="@Disabled" />
            break;
        case PayrollEngine.ValueType.Date:
            <DatePicker Field="@Field" Language="@Language" Disabled="@Disabled" />
            break;
        default:
            PayrollEngine.Log.Error($"Unsupported field type: {Field.ValueType}");
            break;
    }
}

@code
{
    [Parameter] public IFieldObject Field { get; set; }
    [Parameter] public Language Language { get; set; }
    [Parameter] public bool Disabled { get; set; }
}
