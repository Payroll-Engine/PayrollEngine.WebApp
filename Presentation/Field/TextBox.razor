@inherits FieldEditorBase;

<MudTextField T="string"
              @bind-Value="@Field.ValueAsString"
              Culture="@Culture"
              Lines="@LineCount"
              Mask="@Mask"
              Margin="Margin.Dense"
              Variant="@Variant"
              Label="@ValueLabel"
              HelperText="@ValueHelp"
              Error="@Error"
              Disabled="@Disabled"
              ReadOnly="@ReadOnly"
              Required="@Required"
              RequiredError="@ValueRequiredError"
              Adornment="@ValueAdornment"
              AdornmentText="@ValueAdornmentText" />
@code
{
    private int LineCount { get; set; }
    private IMask Mask { get; set; }

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        // lines
        LineCount = Field.Attributes.GetLineCount(Culture) ?? 1;

        // mask
        var mask = Field.Attributes.GetValueMask(Culture);
        Mask = string.IsNullOrWhiteSpace(mask) ? null : new PatternMask(mask);

        await base.OnInitializedAsync();
    }
}
