@using PayrollEngine.WebApp.Presentation.Component
@using PayrollEngine.WebApp.Presentation.Case
@inherits PageBase

@* case not available *@
@if (!CaseAvailable)
{
    <div>@Localizer.Case.MissingCase(CaseName)</div>
    return;
}
@* empty case *@
@if (!Cases.Any())
{
    <div>@Localizer.Case.SelectCase</div>
    return;
}

@* case edit *@
<div class="d-flex flex-grow-1 gap-4 mt-4">
    @* case edit tree *@
    <MudForm @ref="@fieldForm">
        <ChildContent>
            <MudTreeView Items="@Cases">
                <ItemTemplate>
                    @{
                        var style = $"margin-inline-start: {(context == RootCase ? "0" : "1em")}";
                        <MudTreeViewItem Style="@style" @bind-Expanded="@context.IsExpanded"
                                         Items="@context.RelatedCases">
                            <Content>
                                <MudPaper Class="pa-2" Elevation="4">
                                    <MudText Typo="Typo.h5">
                                        @context.GetLocalizedName(PageCulture)
                                    </MudText>
                                    @if (context.HasAnyField)
                                    {
                                        // set very first case field focus to true
                                        foreach (var caseField in context.Fields)
                                        {
                                            if (caseField.Attributes?.GetHidden(PageCulture) ?? false)
                                            {
                                                // don't show hidden attributes
                                                continue;
                                            }

                                            @* case field with a custom culture *@
                                            <CaseField Culture="@CaseCulture"
                                                       Field="@caseField"
                                                       Dense="@Dense"
                                                       Variant="Variant.Text" />
                                        }
                                    }
                                    else
                                    {
                                        <div class="panelMessage">@Localizer.Case.CaseWithoutFields</div>
                                    }
                                </MudPaper>
                            </Content>
                        </MudTreeViewItem>
                    }
                </ItemTemplate>
            </MudTreeView>
        </ChildContent>
    </MudForm>

    @* side panel *@
    <MudPaper MinWidth="22em" MaxWidth="44em" Elevation="4" Class="flex-grow-1 pa-4" Style="margin-top: 4px">
        <MudForm @ref="@changeForm">
            <MudStack Spacing="0" Class="gap-8">

                @* case inputs *@
                <div>
                    <MudText Typo="Typo.h5">@Localizer.Case.Case</MudText>
                    <MudTextField T="string" @bind-Value="@ChangeReason"
                                  Label="@Localizer.CaseChange.Reason"
                                  Required="true"
                                  Margin="@(Dense ? Margin.Dense : Margin.Normal)"
                                  Lines="3"
                                  Variant="Variant.Outlined"
                                  Class="pt-4" />

                    @* forecast change *@
                    @if (HasFeature(Feature.Forecasts))
                    {
                        <MudTextField T="string" @bind-Value="@Forecast"
                                      Label="@Localizer.Forecast.Name"
                                      MaxLength="SystemSpecification.KeyTextLength"
                                      Margin="@(Dense ? Margin.Dense : Margin.Normal)"
                                      Adornment="@(HasForecastHistory ? Adornment.End : Adornment.None)"
                                      AdornmentIcon="@Icons.Material.Filled.History"
                                      OnAdornmentClick="OpenForecastSelection"
                                      Class="pt-4" />
                        @* forecast history *@
                        <MudOverlay Visible="@ForecastSelection" OnClick="@CloseForecastSelection" />
                        <MudPopover Open="@ForecastSelection" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight"
                                    Style="max-width: 20em">
                            <MudStack Spacing="0">
                                <MudList Style="overflow-y: auto; max-height: 40em"
                                         SelectedItemChanged="@(x => SelectForecast(x.Value))"
                                         Clickable="true">
                                    @foreach (var history in ForecastHistory)
                                    {
                                        <MudListItem Value="@history">@history</MudListItem>
                                    }
                                </MudList>
                            </MudStack>
                        </MudPopover>
                    }
                </div>

                @* validation *@
                @if (!Valid)
                {
                    <div>
                        <MudText Typo="Typo.h6">@Localizer.Case.Validation</MudText>
                        <MudSimpleTable Dense="@Dense" Outlined="false" Elevation="0"
                                        Bordered="false" Striped="false">
                            <tbody>
                                <tr>
                                    <th class="pl-0">@Localizer.Shared.Field</th>
                                    <th class="pl-0">@Localizer.Error.Error</th>
                                </tr>
                                @foreach (var rule in RootCase.Validity.Rules)
                                {
                                    <tr>
                                        <td class="pl-0">@rule.Name</td>
                                        <td class="pl-0">@rule.RuleText</td>
                                    </tr>
                                }
                            </tbody>
                        </MudSimpleTable>
                    </div>
                }

                @* case submit *@
                <div class="d-flex flex-grow-1 gap-4">
                    <MudButton Variant="Variant.Outlined"
                               Color="Color.Primary"
                               OnClick="NavigateToParent">
                        @Localizer.Dialog.Cancel
                    </MudButton>
                    <div class="d-flex flex-grow-1 justify-end">
                        <MudButton Variant="Variant.Outlined"
                                   Style="Width: 100%"
                                   Color="Color.Tertiary"
                                   Disabled="@(!Valid)"
                                   OnClick="SubmitCaseAsync">
                            @Localizer.Dialog.Submit
                        </MudButton>
                    </div>
                </div>
            </MudStack>
        </MudForm>
    </MudPaper>
</div>