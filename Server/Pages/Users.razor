@page "/users"
@using PayrollEngine.WebApp.ViewModel
@inherits PayrollEngine.WebApp.Presentation.EditItemPageBase<ViewModel.User, Query, PayrollEngine.WebApp.Server.Dialogs.UserDialog>

@if (!HasFeature(Feature.Users))
{
    NavigateHome();
    return;
}

<MudText Typo="Typo.h4" Class="my-4">Users</MudText>

<MudDataGrid @ref="ItemsGrid" T="User"
             ServerData="GetServerDataAsync"
             EditMode="DataGridEditMode.Form"
             FilterMode="DataGridFilterMode.ColumnFilterRow"
             ColumnResizeMode="ResizeMode.Column"
             SortMode="SortMode.Multiple"
             Filterable="true"
             Hideable="true">
    <Columns>
        <PropertyColumn Property="x => x.Id" IsEditable="false" Filterable="false" />
        <PropertyColumn Property="x => x.Status" />
        <PropertyColumn Property="x => x.Identifier" />
        <PropertyColumn Property="x => x.FirstName" Title="First name" />
        <PropertyColumn Property="x => x.LastName" Title="Last name" />
        <PropertyColumn Property="x => x.Language" />
        <PropertyColumn Property="x => x.UserType" Title="User type" />
        <PropertyColumn Property="x => x.Created">
            <CellTemplate>
                @ValueFormatter.ToCompactString(context.Item.Created)
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Updated">
            <CellTemplate>
                @ValueFormatter.ToCompactString(context.Item.Updated)
            </CellTemplate>
        </PropertyColumn>
        <CustomColumns T="User" Columns="ColumnConfiguration" />
        @* action column needs to be isolated in a separated component.
        otherwise there is a rendering sequence issue (custom columns after the action column)
        *@
        <ItemActionsColumn T="User" ActionOperator="this" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="User" />
    </PagerContent>
    <NoRecordsContent>
        No users available
    </NoRecordsContent>
</MudDataGrid>
