@using PayrollEngine.WebApp;
@using Employee = PayrollEngine.WebApp.ViewModel.Employee
@using Tenant = PayrollEngine.WebApp.ViewModel.Tenant
@using PayrollEngine.Client.Model
@using PayrollEngine.WebApp.Presentation.Component

@inherits MainLayoutBase

<MudThemeProvider @ref="@ThemeProvider" @bind-IsDarkMode="@IsDarkMode"
                  Theme="@AppTheme" />
<MudDialogProvider MaxWidth="MaxWidth.ExtraLarge"
                   CloseOnEscapeKey="true" />
<MudSnackbarProvider />

<MudLayout>
    @if (Session.UserAvailable)
    {
        <MudAppBar Elevation="1">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                           OnClick="NavigationToggleAsync" Title="@Localizer.App.ToggleSidebar" />

            @{
                var appImage = CurrentAppImage;
                if (!string.IsNullOrWhiteSpace(appImage))
                {
                    <img src="@appImage" style="max-width: 13em" />
                }
                else
                {
                    <MudText Typo="Typo.h5" Style="min-width: 8em; width: max-content;">
                        @AppTitle
                    </MudText>
                }
            }
            @if (Session.AnyUserFeature())
            {
                <MudGrid>
                    @* working tenant *@
                    @if (WorkingItems.TenantAvailable())
                    {
                        <MudItem xs="3" lg="3" Class="pl-8">
                            <MudSelect T="Tenant" Label="@Localizer.Tenant.Tenant" Value="@Session.Tenant"
                                       Disabled="@(!TenantChangeEnabled)"
                                       Clearable="@WorkingItems.TenantReset()"
                                       ValueChanged="WorkingTenantChangedAsync">
                                @foreach (var tenant in Session.Tenants)
                                {
                                    <MudSelectItem Value="@tenant">@tenant.Identifier</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                    }
                    @* working payroll *@
                    @if (WorkingItems.PayrollAvailable())
                    {
                        <MudItem xs="3" lg="3">
                            <MudSelect T="Payroll" Label="@Localizer.Payroll.Payroll" Value="@Session.Payroll"
                                       Disabled="@(!PayrollChangeEnabled)"
                                       Clearable="@WorkingItems.PayrollReset()"
                                       ValueChanged="WorkingPayrollChangedAsync">
                                @foreach (var payroll in Session.Payrolls)
                                {
                                    <MudSelectItem Value="@payroll">@GetPayrollName(payroll) &#x2022; @GetPayrollDivisionName(payroll)</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                    }
                    @* working employee *@
                    @if (WorkingItems.EmployeeAvailable())
                    {
                        <MudItem xs="3" lg="3">
                            <MudSelect T="Employee" Label="@Localizer.Employee.Employee" Value="@Session.Employee"
                                       Disabled="@(!EmployeeChangeEnabled)"
                                       Clearable="@WorkingItems.EmployeeReset()"
                                       ValueChanged="WorkingEmployeeChangedAsync">
                                @foreach (var employee in Session.Employees)
                                {
                                    <MudSelectItem Value="@employee">@employee.FirstName @employee.LastName &#x2022; @employee.Identifier</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                    }
                </MudGrid>
            }
            <MudSpacer />

            @* working user *@
            <MudBadge Visible="@(HasFeature(Feature.Tasks) && Session.User.OpenTaskCount > 0)"
                      Color="Color.Primary"
                      Content="@Session.User.OpenTaskCount"
                      OnClick="NavigateToTasks"
                      Overlap="true">
                @{
                    var style = "min-width: max-content";
                    var firstName = Session.User.FirstName;
                    var lastName = Session.User.LastName;
                    @if (Session.User.Supervisor)
                    {
                        style += "font-weight: bold";
                        firstName = '[' + firstName;
                        lastName = lastName + ']';
                    }
                    <MudInputLabel Class="pr-4" Style="@style">@firstName&nbsp;@lastName</MudInputLabel>
                }
            </MudBadge>

            @* user menu *@
            <MudMenu Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit"
                     AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                <MudMenuItem Icon="@Icons.Material.Filled.ManageAccounts" 
                             OnClick="ChangeUserSettingsAsync">@Localizer.User.UserSettings</MudMenuItem>
                @if (IsDarkMode)
                {
                    <MudMenuItem Icon="@Icons.Material.Filled.LightMode" OnClick="ToggleThemeAsync">
                        @Localizer.App.LightMode
                    </MudMenuItem>
                }
                else
                {
                    <MudMenuItem Icon="@Icons.Material.Filled.DarkMode"OnClick="ToggleThemeAsync">
                        @Localizer.App.DarkMode
                    </MudMenuItem>
                }
                <MudMenuItem Icon="@Icons.Material.Filled.Info"OnClick="AboutAsync">
                    @Localizer.App.About
                </MudMenuItem>
                @if (UserLoginEnabled())
                {
                    <MudMenuItem Icon="@Icons.Material.Filled.Logout" OnClick="LogoutAsync">
                        @Localizer.App.Logout
                    </MudMenuItem>
                }
            </MudMenu>
        </MudAppBar>
        <MudDrawer @bind-Open="NavigationOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
            <NavMenu />
        </MudDrawer>
    }
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="ma-0">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<Document BaseLabel="@AppTitle" />
<UserNotification @ref="Notification" />
