@implements PayrollEngine.WebApp.Presentation.IItemValidator<Employee>

@using PayrollEngine.WebApp.ViewModel
@using PayrollEngine.WebApp.Presentation
@using PayrollEngine.WebApp.Server.Components
@using Task = System.Threading.Tasks.Task;

<MudDialog Class="item-dialog">
    <DialogContent>
        <MudForm @ref="form">
            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-3">
                <MudTabPanel Text="Common">
                    <MudStack Class="pa-4" Spacing="1">
                        <MudTextField T="string" @bind-Value="Employee.Identifier"
                                      ReadOnly="@Employee.IsExistingObject"
                                      MaxLength="@SystemSpecification.KeyTextLength"
                                      Label="@(Employee.IsNewObject ? "Identifier (immutable)" : "Identifier")"
                                      Validation="@(!string.IsNullOrWhiteSpace(Employee.Identifier))"
                                      Required="true" RequiredError="Identifier is required" />
                        <MudTextField T="string" @bind-Value="Employee.FirstName"
                                      MaxLength="@SystemSpecification.KeyTextLength"
                                      Label="First name" />
                        <MudTextField T="string" @bind-Value="Employee.LastName"
                                      MaxLength="@SystemSpecification.KeyTextLength"
                                      Label="Last name" />
                        <MudSelect T="string" @bind-Value="SelectedDivision" @bind-SelectedValues="Employee.DivisionsAsEnum"
                                   Label="Divisions"
                                   Disabled="@(Divisions == null || Divisions.Count < 1)"
                                   MultiSelection="true"
                                   SelectAll="true"
                                   SelectAllText="Select all divisions">
                            @foreach (var division in Divisions)
                            {
                                <MudSelectItem T="string" Value="@division.Name">@division.Name</MudSelectItem>
                            }
                        </MudSelect>
                        <MudSelect T=" string" @bind-Value="Employee.Culture" Label="Culture">
                            @foreach (var cultureName in CultureNames)
                            {
                                <MudSelectItem T="string" Value="@cultureName">@cultureName</MudSelectItem>
                            }
                        </MudSelect>
                        <MudTextField T="string" @bind-Value="Employee.Calendar"
                                      MaxLength="@SystemSpecification.KeyTextLength"
                                      Label="Calendar" />
                        <ItemBaseFields Item="Employee" />
                    </MudStack>
                </MudTabPanel>
                <MudTabPanel Text="Attributes">
                    <AttributesGrid Item="Employee" Class="attributes-grid pa-2" />
                </MudTabPanel>
            </MudTabs>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <ItemDialogActions Item="Employee" FormValidator="this" />
    </DialogActions>
</MudDialog>

@code {
    MudForm form;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Employee Employee { get; set; } = new();
    [Parameter] public List<Division> Divisions { get; set; }

    private List<string> CultureNames { get; set; }
    private string SelectedDivision { get; set; }

    protected override async Task OnInitializedAsync()
    {
    // cultures
        CultureNames = CultureTool.GetSpecificCultureNames();
        await base.OnInitializedAsync();
    }

    public async Task<bool> ValidateAsync(Employee employee) =>
        await form.Revalidate();
}